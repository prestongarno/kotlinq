version = rootProject.properties.get("version")
group = "com.prestongarno.kotlinq"

buildscript {

  println("Using kotlinq version: $version")

  ext.generationTarget = "$rootProject.name/src/main/kotlin"

  repositories {
    mavenLocal()
    jcenter()
    mavenCentral()
  }
  dependencies {
    classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:1.2.0"
    classpath "com.prestongarno.kotlinq:kotlinq-gradle:$version"
  }
}

apply plugin: 'java'
apply plugin: 'kotlin'
apply plugin: "com.prestongarno.kotlinq"
apply plugin: 'maven-publish'
apply plugin: 'maven'


repositories {
  mavenLocal()
  mavenCentral()
  jcenter()
}

dependencies {
  compile "com.prestongarno.kotlinq:kotlinq-core:$version"
}

kotlinq {
/*  schema {
    target = "$project.name/src/main/resources/graphql.schema.graphqls"
    kotlinFileName = "GitHubGraphQl.kt"
    packageName = "com.github.graphql"
    outputDir = generationTarget
  }*/
  schema {
    target = "$project.name/src/main/resources/starwars.graphqls"
    kotlinFileName = "StarWars.kt"
    packageName = "com.facebook"
    outputDir = generationTarget
  }
  schema {
    target = "$project.name/src/main/resources/programmingLanguages.graphqls"
    kotlinFileName = "LanguagesGraphQL.kt"
    packageName = "com.languages"
    outputDir = generationTarget
  }
  schema {
    target = "$project.name/src/main/resources/yelp.graphqls"
    kotlinFileName = "YelpGraphQl.kt"
    packageName = "com.yelp.graphql"
    outputDir = generationTarget
  }
}

compileJava.mustRunAfter(compileGraphQL)

publishing {
  publications {
    mavenJava(MavenPublication) {
      groupId group
      artifactId rootProject.name
      from components.java
      pom.withXml {
        asNode().children().last() + {
          resolveStrategy = Closure.DELEGATE_FIRST
          licenses {
            license {
              name "Apache 2.0"
            }
          }
        }
      }
    }
  }
  repositories {
    mavenLocal()
  }
}

clean.doFirst {
  delete 'kotlinq-test-api/src/main/kotlin'
}
uploadArchives {
  repositories {
    mavenLocal()
  }
}

sourceSets {
  main {
    java {
      srcDirs = ["$rootProject.name/src/kotlin"]
    }
    resources {
      srcDirs = ['src/main/resources']
    }
  }
  test {
    java {
      srcDirs = []
    }
    resources {
      srcDirs = []
    }
  }
}
