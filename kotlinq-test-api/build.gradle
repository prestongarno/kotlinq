version = rootProject.properties.get("version")

buildscript {

  ext.generationTarget = "$rootProject.name/src/main/kotlin"
  repositories {
    jcenter()
    mavenCentral()
    maven {
      // build plugins are hell on earch to manage without a maven repo
      url '../kotlinq-core/libs'
    }
  }
  dependencies {
    classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:1.2.0"
    classpath "com.prestongarno.kotlinq:kotlinq-gradle:$version"
  }
}

apply plugin: 'java'
apply plugin: 'kotlin'
apply plugin: "com.prestongarno.kotlinq"

repositories {
  mavenCentral()
  jcenter()
  maven {
    url '../kotlinq-core/libs'
  }
}

dependencies {
  compile "com.prestongarno.kotlinq:kotlinq-core:$version"
}

sourceSets {
  main {
    java {
      srcDirs = ["$rootProject.name/src/kotlin"]
    }
    resources {
      srcDirs = ['src/main/resources']
    }
  }
  test {
    java {
      srcDirs = []
    }
    resources {
      srcDirs = []
    }
  }
}

kotlinq {
  schema {
    target = "$project.name/src/main/resources/programmingLanguages.graphqls"
    kotlinFileName = "LanguagesGraphQL.kt"
    packageName = "com.languages"
    outputDir = generationTarget
  }
  schema {
    target = "$project.name/src/main/resources/yelp.graphqls"
    kotlinFileName = "YelpGraphQl.kt"
    packageName = "com.yelp.graphql"
    outputDir = generationTarget
  }
}

compileJava.mustRunAfter(compileGraphQL)
