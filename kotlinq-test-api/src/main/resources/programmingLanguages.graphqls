

union SoftwareComponent = ProgrammingLanguage | Library | Framework | OperatingSystem

type ProgrammingLanguage implements Platform {
  name: String
  since: Date
  currentRelease: String
  isTyped: Boolean
  dependencies: [SoftwareComponent]
  primaryFeatures: [Feature]
}

type Framework {
  name: String
  platform: Platform
  languagesUsed: [ProgrammingLanguage]
  dependencies: [SoftwareComponent]
  primaryFeatures: [Feature]
}

type Library {
  name: String
  languagesUsed: [ProgrammingLanguage]
  dependencies: [SoftwareComponent]
  primaryFeatures: [Feature]
}

type OperatingSystem implements Platform {
  name: String
  since: Date
  currentRelease: String
  primaryFeatures: [Feature]
  archSupport: [Architecture]
}

interface Platform {
  name: String
  since: Date
  currentRelease: String
}

enum Architecture {
  X86,
  X86_64,
  MIPS,
  DOS,
  POWER_PC
}

scalar Date
scalar ID

type Feature {
  name: String
  description: String
}

type Query {
  search(term: String!, limit: Int!, after: ID): SoftwareComponent
}
