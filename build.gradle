import java.lang.reflect.Array
import java.util.stream.Collectors

/*
 * Copyright (C) 2018 Preston Garno
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *  http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 */

buildscript {

  apply from: rootProject.file("gradle/dependencies.gradle")

  ext.sourceCompatibility = 1.8
  ext.projectDescription = "a kotlin client for graphql"
  ext.gitBaseUrl = GIT_BASE_URL + '/kotlinq'
  ext.projLicenseUrl = "$gitBaseUrl/LICENSE.txt"

  repositories {
    jcenter()
    mavenCentral()
  }

  dependencies {
    classpath dep.kotlinGradlePlugin
    classpath dep.bintrayGradlePlugin
    classpath dep.jfrogLatestRelease
  }
}

//allprojects {

group = 'com.prestongarno.kotlinq'
version = rootProject.findProperty("release") == "true" ? "0.4.2" : "0.4.2-SNAPSHOT"


allprojects {
  apply plugin: 'java'
  apply plugin: 'idea'
  apply plugin: 'kotlin'
  repositories {
    jcenter()
  }
  dependencies {
    compile dep.kotlinStdLib
    testCompile dep.kotlinTest
    testCompile dep.junit
    testCompile dep.truth
  }
}

compileKotlin {
  kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
  kotlinOptions.jvmTarget = "1.8"
}

allprojects {
  sourceSets {
    main {
      java {
        srcDirs = [
            "$projectDir/src/main/kotlin",
            "$projectDir/src/main/java"]
      }
      resources {
        srcDirs = [
            "$projectDir/src/main/resources"]
      }
    }
    test {
      java {
        srcDirs = [
            "$projectDir/src/test/kotlin",
            "$projectDir/src/main/java"]
      }
      resources {
        srcDirs = [
            "$projectDir/src/test/resources"]
      }
    }
  }

  jar {
    from(sourceSets.main.output)
    from(sourceSets.main.resources)
  }

  task jarDoc(type: Jar) {
    from(javadoc.destinationDir)
    classifier 'javadoc'
  }

  task jarSource(type: Jar) {
    from(sourceSets.main.allSource)
    from(sourceSets.test.allSource)
    classifier 'sources'
  }

  artifacts {
    archives jar, jarSource, jarDoc
  }

  apply from: rootProject.file("gradle/deploy.gradle")

  kotlin {
    experimental {
      coroutines "enable"
    }
  }

  idea.module.downloadJavadoc = true
}
